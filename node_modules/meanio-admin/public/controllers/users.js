(function() {
  'use strict';

  angular.module('mean.admin').controller('UsersController', ['$scope', 'Global', 'Menus', '$rootScope', '$http', 'Users', 'Circles', "$resource",
    function ($scope, Global, Menus, $rootScope, $http, Users, Circles, $resource) {
      $scope.global = Global;
      $scope.user = {};

      Circles.mine(function (acl) {
        var circles = acl.allowed;

        $scope.userSchema = [{
          title: 'Email',
          schemaKey: 'email',
          type: 'email',
          inTable: true
        }, {
          title: 'First Name',
          schemaKey: 'first_name',
          type: 'text',
          inTable: true
        }, {
          title: 'Last Name',
          schemaKey: 'last_name',
          type: 'text',
          inTable: true
        }, {
          title: 'Username',
          schemaKey: 'username',
          type: 'text',
          inTable: true
        }, {
          title: 'Roles',
          schemaKey: 'roles',
          type: 'select',
          options: circles,
          inTable: true
        }, {
          title: 'Password',
          schemaKey: 'password',
          type: 'password',
          inTable: false
        }, {
          title: 'Repeat password',
          schemaKey: 'confirmPassword',
          type: 'password',
          inTable: false
        }, {
          title: 'State/Province',
          schemaKey: 'state',
          type: 'text',
          inTable: true
        }, {
          title: 'Country',
          schemaKey: 'country',
          type: 'text',
          inTable: true
        }, {
          title: 'Date of Birth',
          schemaKey: 'birth_date',
          type: 'text',
          inTable: true
        }];
      });

      $scope.init = function () {
        Users.query({}, function (users) {
          $scope.users = users;
        });
      };

      $scope.isActive = function (user) {
        if(user) {
          if(user.RequiredEmailConfirmation || typeof user.RequiredEmailConfirmation === 'undefined') {
            return false
          }
        }
        return true;
      };
      $scope.isEnabled = function (user) {
        if(user.deleted_at === null || typeof user.deleted_at === 'undefined') {
          return true;
        }
        return false;
      };

      $scope.add = function (valid) {
        if (!valid) {
          return;
        }

        if (!$scope.users) {
          $scope.users = [];
        }

        var user = new Users({
          email: $scope.user.email,
          first_name: $scope.user.first_name,
          last_name: $scope.user.last_name,
          birth_date: $scope.user.birth_date,
          state: $scope.user.state,
          country: $scope.user.country,
          username: $scope.user.username,
          password: $scope.user.password,
          confirmPassword: $scope.user.confirmPassword,
          roles: $scope.user.roles
        });

        user.$save(function (data, headers) {
          $scope.user = {};
          $scope.users.push(user);
          $scope.userError = null;
        }, function (data, headers) {
          $scope.userError = data.data;
        });
      };

      $scope.remove = function (user) {
        for (var i in $scope.users) {
          if ($scope.users[i] === user) {
            $scope.users.splice(i, 1);
          }
        }

        user.$remove();
      };

      $scope.update = function (user, userField) {
        // To set active / inactive / enable / disable tags
        if(userField == 'inactive') {
          user.RequiredEmailConfirmation = true;
        }
        else if (userField == 'active') {
          user.RequiredEmailConfirmation = false;
        }
        else if (userField == 'enable') {
          user.deleted_at = null;
        }
        else if (userField == 'disable') {
          user.deleted_at = Date.now();
        }

        // To set validation true previously added users
        if(user.name && (!user.first_name || !user.last_name || !user.birth_date)) {
          user.first_name = user.name;
          user.last_name = user.name;
          user.birth_date = Date.now();
        }

        if (userField && userField === 'roles' && user.tmpRoles.indexOf('admin') !== -1 && user.roles.indexOf('admin') === -1) {
          if (confirm('Are you sure you want to remove "admin" role?')) {
            user.$update();
          } else {
            user.roles = user.tmpRoles;
          }
        } else {
          user.$update();
        }
      };

      $scope.beforeSelect = function (userField, user) {
        if (userField === 'roles') {
          user.tmpRoles = user.roles;
        }
      };

      // To re-send the email confirmation
      $scope.reSendEmailConfirmation = function (user) {
        if (confirm('Are you sure you want to re-send email confirmation')) {
          return $http.post('/api/admin/users/sendconfirmation/' + user._id, user)
              .then(function (response) {
                if(response.data.status == "danger") {
                  $scope.confirmationSuccess = null;
                  $scope.confirmationError = response.data.message;
                }
                else {
                  $scope.confirmationError = null;
                  $scope.confirmationSuccess = response.data.message;
                }
              }, function (error) {
                  $scope.confirmationSuccess = null;
                  $scope.confirmationError = error.data;
              });
        }
      };

    }
  ]);
})();
